@page "/Editors/DropDownComponents"

@using Syncfusion.EJ2.RazorComponents.InPlaceEditor
@using System;
@using System.Collections.Generic;

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "DropDownComponents";
    SampleBrowser.CurrentControlName = "Toast";
    SampleBrowser.CurrentControlCategory = "Toast";
    SampleBrowser.CurrentControl = SampleBrowser.Config.InPlaceEditor;
    SampleBrowser.ActionDescription = new string[] {
      @"<p>
        This sample demonstrates the usage of drop-down components such as AutoComplete, ComboBox, DropDownList, and MultiSelect. Click on the dotted input element to switch to the
        editable state of the corresponding integrated component.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        This sample illustrates the way to integrate drop-down components with <code>In-place Editor</code>. The
        applicable types of components are:
    </p>
    <p>
        <ul>
            <li>
                <code>DropDownList</code>
            </li>
            <li>
                <code>AutoComplete</code>
            </li>
            <li>
                <code>ComboBox</code>
            </li>
            <li>
                <code>MultiSelect</code>
            </li>
        </ul>
    </p>
    <p>
        The above components and their features are editable in place and can be customized with the model
        properties of the specific component.
    </p>
    <p>
        More information on the <code>In-place Editor</code> instantiation can be found in the <a target=""_blank""
                                                                                                  href=""https://ej2.syncfusion.com/aspnetcore/documentation/inplace-editor/getting-started-asp-core/"">
            documentation section
        </a>.
    </p>"
    };

}
@*End:Hidden*@

<div class="col-lg-8 control-section inplace-control-section drop-down-layout">
    <div class="control_wrapper">
        <table>
            <tr>
                <td>
                    <label class="control-label">
                        DropDownList
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="dropdownEle" mode="@RenderMode.Popup" type="@InputType.DropDownList" value="@dropdownValue" model="@dropdownData">
                    </EjsInPlaceEditor>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        AutoComplete
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="autoCompleteEle" mode="@RenderMode.Popup" type="@InputType.AutoComplete" value="@autoValue" model="@autocompleteData">
                    </EjsInPlaceEditor>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        ComboBox
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="comboBoxEle" mode="@RenderMode.Popup" type="@InputType.ComboBox" value="@comboValue" model="@comboData">
                    </EjsInPlaceEditor>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label">
                        MultiSelect
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="multiSelectEle" mode="@RenderMode.Popup" type="@InputType.MultiSelect" value="@multiValue" model="@multiSelectData">
                    </EjsInPlaceEditor>
                </td>
            </tr>
        </table>
    </div>
</div>

<style>
    .inplace-control-section.drop-down-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }

    .inplace-control-section.drop-down-layout .control_wrapper label {
        padding: 15px;
        text-align: left;
        font-weight: 400;
        font-size: 14px;
        margin-bottom: 0px;
    }

    .inplace-control-section.drop-down-layout .control_wrapper {
        margin: auto;
        max-width: 400px;
    }

    .inplace-control-section.drop-down-layout .control_wrapper table {
        margin: auto;
    }

    .inplace-control-section.drop-down-layout .control_wrapper table td {
        width: 200px;
        height: 100px;
    }

    #dropdownProperty table td {
        width: 50%;
    }

    #dropdownProperty .property-panel-table div {
        padding-left: 10px;
        padding-top: 10px;
    }
</style>

@code {
    object dropdownValue = "Canada";
    object autoValue = "Australia";
    object comboValue = "Finland";
    string[] multiValue = new string[] { "Canada", "Bermuda" };

    object dropdownData = new
    {
        placeholder = "Find a countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };
    object autocompleteData = new
    {
        placeholder = "Type to search countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };
    object comboData = new
    {
        placeholder = "Find a countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };
    object multiSelectData = new
    {
        placeholder = "Choose the countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" },
        mode = "Box"
    };
}
