@page "/Editors/Overview"

@using Syncfusion.EJ2.RazorComponents.InPlaceEditor
@using System;
@using System.Collections.Generic;

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Overview";
    SampleBrowser.CurrentControlName = "Toast";
    SampleBrowser.CurrentControlCategory = "Toast";
    SampleBrowser.CurrentControl = SampleBrowser.Config.InPlaceEditor;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates the default functionalities of the In-place Editor component. Click on the dotted input
        element to
        switch to the editable state and save or cancel it by clicking the actions buttons.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        The <code>In-place Editor</code> component is used to edit values in place and update them to the server.
    </p>
    <p>
        <code>In-place Editor</code> modes can be switched by selecting the appropriate values provided in a drop-down.
        The applicable editor positions are as follows:
    </p>
    <p>
        <ul>
            <li>
                <a target=""_blank"" href=""https://ej2.syncfusion.com/documentation/api/inplace-editor/#mode"">
                    Inline
                </a>
            </li>
            <li>
                <a target=""_blank"" href=""https://ej2.syncfusion.com/documentation/api/inplace-editor/#mode"">
                    Pop-up
                </a>
            </li>
        </ul>
    </p>
    <p>
        The edit on modes of In-place editor can be switched by selecting the appropriate values provided in a
        drop-down. The applicable modes are as follows:
        <ul>
            <li>Click - Editor opens the edit input with single click of textbox.</li>
            <li>DblClick - Editor opens the edit input with double click of textbox.</li>
            <li>EditIconClick - Edit mode can be open with the use of edit icon only which is visible on hover of textbox.</li>
        </ul>
    </p>
    <p>
        The Save and Cancel buttons of the <code>In-place Editor</code> component can be shown or hidden by switching the Show Button check box
        state. If the
        action buttons are hidden, then you can save the data by clicking outside the target or by pressing the Enter
        key.
        You can cancel the edit request by pressing the Esc key.
    </p>
    <p>
        More information on the <code>In-place Editor</code> instantiation can be found in the<a target=""_blank"" href=""https://ej2.syncfusion.com/aspnetcore/documentation/inplace-editor/getting-started-asp-core/"">
            documentation section
        </a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-8 control-section inplace-control-section default_layout">
    <div class="control_wrapper">
        <table>
            <tr>
                <td>
                    <label class="control-label" style="text-align: left;font-size: 14px;font-weight: 400">
                        TextBox
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="inplace_editor" mode="@RenderMode.Inline" type="@InputType.Text" value="@textValue" submitOnEnter="true" model="@textModel">
                    </EjsInPlaceEditor>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label" style="text-align: left;font-size: 14px;font-weight: 400">
                        NumericTextBox
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="numericTextBoxEle" mode="@RenderMode.Inline" type="@InputType.Numeric" value="@numericValue" model="@numericModel">
                    </EjsInPlaceEditor>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="control-label" style="text-align: left;font-size: 14px;font-weight: 400">
                        MaskedTextBox
                    </label>
                </td>
                <td>
                    <EjsInPlaceEditor id="maskedTextBoxEle" mode="@RenderMode.Inline" type="@InputType.Mask" value="@maskValue" model="@maskedModel">
                    </EjsInPlaceEditor>
                </td>
            </tr>
        </table>
    </div>
</div>

<style>
    .inplace-control-section.default_layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }


    .inplace-control-section.default_layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }


    .inplace-control-section.default_layout .control_wrapper {
        width: 100%;
        max-width: 400px;
        margin: auto;
    }

        .inplace-control-section.default_layout .control_wrapper .control-center {
            text-align: center;
        }

        .inplace-control-section.default_layout .control_wrapper table td {
            width: 200px;
            height: 100px;
        }

            .inplace-control-section.default_layout .control_wrapper table td .control-label {
                margin-bottom: 0px;
            }

    .inplace-control-section.default_layout .e-inplaceeditor {
        height: auto;
    }

    .property-section table td {
        width: 50%;
    }

    @@media (max-width: 1200px) {
        .inplace-control-section.default_layout {
            width: 100%;
        }
    }

    @@media (max-width: 768px) {
        .inplace-control-section.default_layout .control_wrapper table td {
            width: 50%;
            padding-right: 30px;
        }
    }
</style>

@code {
    object textValue = "Andrew";
    object maskValue = "012-345-6789";
    object numericValue = "$100.00";

    object textModel = new
    {
        placeholder = "Enter employee name"
    };
    object numericModel = new
    {
        placeholder = "Currency format",
        value = 100,
        format = "c2"
    };
    object maskedModel = new
    {
        mask = "000-000-0000"
    };
}
